name: Django CI

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: blog_dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        # Health check to ensure postgres is ready before job starts
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        # Django settings
        BASE_SECRET_KEY: 'a-dummy-secret-key-for-ci-that-is-long-enough'
        DEBUG: 'True'
        COOKIE_AGE: '1209600'
        SITE_TITLE: 'Test Blog'
        DJANGO_SETTINGS_MODULE: 'core.settings.dev'

        # Database settings to connect to the service container
        DB_NAME: blog_dev
        DB_USER: postgres
        DB_PASSWORD: password
        DB_HOST: 127.0.0.1 # Connect to the service container via localhost
        POSTGRES_PORT: 5432

        # Email (use console backend for tests to avoid SMTP)
        EMAIL_BACKEND: 'django.core.mail.backends.console.EmailBackend'
      run: |
        python manage.py migrate
        pytest